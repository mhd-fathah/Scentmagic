<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <title>Scentmagic - Categories</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="shortcut icon" type="image/x-icon" href="/img/logo.png">
  <link href="/css/admin/main.css" rel="stylesheet" type="text/css">
  <script src="/js/admin/color-modes.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
</head>

<body>
  <div class="screen-overlay"></div>
  <aside class="navbar-aside" id="offcanvas_aside">
    <div class="aside-top">
      <a href="index.html" class="brand-wrap">
        <img src="/img/logo.png" class="logo" alt="Scentmagic Dashboard" />
      </a>
      <div>
        <button class="btn btn-icon btn-aside-minimize text-muted">
          <i class="fas fa-bars"></i>
        </button>

      </div>
    </div>
    <nav>
      <ul class="menu-aside">
        <li class="menu-item">
          <a class="menu-link" href="/admin/dashboard">
            <span class="text">Dashboard</span>
          </a>
        </li>
        <li class="menu-item">
          <a class="menu-link" href="/admin/products">
            <span class="text">Products</span>
          </a>
        </li>
        <li class="menu-item">
          <a class="menu-link" href="/admin/categories">
            <span class="text">Categories</span>
          </a>
        </li>
        <li class="menu-item">
          <a class="menu-link" href="/admin/orders">
            <span class="text">Orders</span>
          </a>
        </li>
        <li class="menu-item">
          <a class="menu-link" href="/admin/users">
            <span class="text">Users</span>
          </a>
        </li>
        <li class="menu-item">
          <a class="menu-link" href="/admin/products/add">
            <span class="text">Add Product</span>
          </a>
        </li>
        <li class="menu-item">
          <a class="menu-link" href="#">
            <span class="text">Transactions</span>
          </a>
        </li>
        <li class="menu-item">
          <a class="menu-link" href="#">
            <span class="text">Reviews</span>
          </a>
        </li>
      </ul>
      <hr />
      <ul class="menu-aside">
        <li class="menu-item">
          <a class="menu-link" href="#">
            <span class="text">Account</span>
          </a>
        </li>
      </ul>
      <br />
      <br />
    </nav>
  </aside>
  <main class="main-wrap">
    <header class="main-header navbar">
      <div class="col-nav d-flex justify-content-end align-items-center w-100">
        <!-- Mobile Menu Button -->
        <button class="btn btn-icon btn-mobile me-auto d-lg-none" data-bs-toggle="offcanvas"
          data-bs-target="#offcanvas_aside">
          <i class="fas fa-bars"></i>
        </button>


        <!-- Navbar -->
        <ul class="nav ms-auto">
          <li class="dropdown nav-item">
            <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownAccount" aria-expanded="false">
              <img class="img-xs rounded-circle" src="/img/logo.png" alt="Admin" />
            </a>

            <!-- Dropdown Menu -->
            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
              <!-- Uncomment or add any menu items you need -->
              <!-- <a class="dropdown-item" href="#">
                      <i class="material-icons md-perm_identity"></i>Edit Profile
                    </a>
                    <a class="dropdown-item" href="#">
                      <i class="material-icons md-settings"></i>Account Settings
                    </a>
                    <a class="dropdown-item" href="#">
                      <i class="material-icons md-account_balance_wallet"></i>Wallet
                    </a>
                    <a class="dropdown-item" href="#">
                      <i class="material-icons md-receipt"></i>Billing
                    </a>
                    <a class="dropdown-item" href="#">
                      <i class="material-icons md-help_outline"></i>Help Center
                    </a> -->
              <div class="dropdown-divider"></div>
              <a class="dropdown-item text-danger" href="/admin/logout">
                <i class="material-icons md-exit_to_app"></i>Logout
              </a>
            </div>
          </li>
        </ul>
      </div>
    </header>

    <section class="content-main">
      <div class="content-header">
        <h2 class="content-title">Offers</h2>
        <div>
          <!-- Button to trigger Add Offer Modal -->
          <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addOfferModal">
            Add New Offer
          </button>
        </div>
      </div>
      <div class="card">
        <div class="card-body">
          <!-- Filters -->
          <div class="row mb-4">
            <div class="col-lg-4 col-6">
              <input type="text" placeholder="Search offers..." class="form-control" id="offerSearch" />
            </div>
            <div class="col-lg-2 col-6">
              <select class="form-select" id="offerTypeFilter">
                <option value="">All Types</option>
                <option value="Category">Category Offer</option>
                <option value="Product">Product Offer</option>
              </select>
            </div>
            <div class="col-lg-2 col-6">
              <select class="form-select" id="offerStatusFilter">
                <option value="">All Status</option>
                <option value="Active">Active</option>
                <option value="Inactive">Inactive</option>
                <option value="Scheduled">Scheduled</option>
              </select>
            </div>
          </div>

          <!-- Offers Table -->
          <div class="table-responsive">
            <table class="table table-hover">
              <thead>
                <tr>
                  <th>Offer Name</th>
                  <th>Type</th>
                  <th>Category/Product</th>
                  <th>Discount</th>
                  <!-- <th>Min. Purchase</th> -->
                  <th>Start Date</th>
                  <th>End Date</th>
                  <th>Status</th>
                  <th class="text-end">Action</th>
                </tr>
              </thead>
              <tbody>
                <% offers.forEach(offer=> { %>
                  <tr>
                    <td><b>
                        <%= offer.name %>
                      </b></td>
                    <td>
                      <div class="badge bg-<%= offer.type === 'Category' ? 'success' : 'info' %>">
                        <%= offer.type %>
                      </div>
                    </td>
                    <td>
                      <%= offer.categoryOrProduct %>
                    </td>
                    <td>
                      <%= offer.discountType==='Percentage' ? `${offer.discountValue}%` : `$${offer.discountValue}` %>
                    </td>
                    <!-- <td>
                                        <%= offer.minPurchase ? `$${offer.minPurchase}` : 'N/A' %>
                                    </td> -->
                    <td>
                      <%= new Date(offer.startDate).toLocaleDateString() %>
                    </td>
                    <td>
                      <%= new Date(offer.endDate).toLocaleDateString() %>
                    </td>
                    <td>
                      <span
                        class="badge bg-<%= offer.status === 'Active' ? 'primary' : offer.status === 'Scheduled' ? 'warning' : 'secondary' %>">
                        <%= offer.status %>
                      </span>
                    </td>
                    <td class="text-end">
                      <!-- Trigger Edit Offer Modal -->
                      <button class="btn btn-sm btn-light font-sm rounded" data-bs-toggle="modal"
                        data-bs-target="#editOfferModal" data-id="<%= offer._id %>"
                        onclick="populateEditForm('<%= offer._id %>')">
                        Edit
                      </button>
                      <button class="btn btn-sm btn-outline-danger font-sm rounded ms-2"
                        onclick="deleteOffer('<%= offer._id %>')">
                        Delete
                      </button>
                    </td>
                  </tr>
                  <% }); %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </section>

    <!-- Add Offer Modal -->
    <div class="modal fade" id="addOfferModal" tabindex="-1" aria-labelledby="addOfferModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg">
        <div class="modal-content" style="background-color: #222736;">
          <form action="/admin/offers/add" method="POST" id="offerForm" novalidate>
            <div class="modal-header">
              <h5 class="modal-title text-white" id="addOfferModalLabel">Add New Offer</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"
                style="background-color: white; color: black;"></button>
            </div>
            <div class="modal-body">
              <!-- Offer Name -->
              <div class="mb-3">
                <label for="offerName" class="form-label text-white">Offer Name</label>
                <input type="text" class="form-control" id="offerName" name="name" placeholder="Enter the offer name" />
                <span class="text-danger" id="offerNameError"></span>
              </div>

              <!-- Offer Type -->
              <div class="mb-3">
                <label for="offerType" class="form-label text-white">Offer Type</label>
                <select class="form-select" id="offerType" name="type" onchange="loadOptions()">
                  <option value="">Select Offer Type</option>
                  <option value="Category">Category</option>
                  <option value="Product">Product</option>
                </select>
                <span class="text-danger" id="offerTypeError"></span>
              </div>

              <!-- Dynamic Category or Product -->
              <div class="mb-3">
                <label for="categoryOrProduct" class="form-label text-white">Category or Product</label>
                <select class="form-select" id="categoryOrProduct" name="categoryOrProduct">
                  <option value="">Select a value</option>
                </select>
                <span class="text-danger" id="categoryOrProductError"></span>
              </div>

              <!-- Discount Type -->
              <div class="mb-3">
                <label for="discountType" class="form-label text-white">Discount Type</label>
                <select class="form-select" id="discountType" name="discountType">
                  <option value="">Select Discount Type</option>
                  <option value="Percentage">Percentage</option>
                  <option value="Fixed Amount">Fixed Amount</option>
                </select>
                <span class="text-danger" id="discountTypeError"></span>
              </div>

              <!-- Discount Value -->
              <div class="mb-3">
                <label for="discountValue" class="form-label text-white">Discount Value</label>
                <input type="number" class="form-control" id="discountValue" name="discountValue"
                  placeholder="Enter discount value" min="0" step="0.01" />
                <div class="form-text text-muted">
                  For percentage discounts, use values between 0 and 100.
                </div>
                <span class="text-danger" id="discountValueError"></span>
              </div>

              <!-- Start Date -->
              <div class="mb-3">
                <label for="startDate" class="form-label text-white">Start Date</label>
                <input type="date" class="form-control" id="startDate" name="startDate" />
                <span class="text-danger" id="startDateError"></span>
              </div>

              <!-- End Date -->
              <div class="mb-3">
                <label for="endDate" class="form-label text-white">End Date</label>
                <input type="date" class="form-control" id="endDate" name="endDate" />
                <div class="form-text text-muted">
                  Ensure the end date is after the start date.
                </div>
                <span class="text-danger" id="endDateError"></span>
              </div>

              <!-- Status -->
              <div class="mb-3">
                <label for="status" class="form-label text-white">Status</label>
                <select class="form-select" id="status" name="status">
                  <option value="">Select Status</option>
                  <option value="Active">Active</option>
                  <option value="Inactive">Inactive</option>
                  <option value="Scheduled">Scheduled</option>
                </select>
                <span class="text-danger" id="statusError"></span>
              </div>

              <!-- Description -->
              <div class="mb-3">
                <label for="description" class="form-label text-white">Description</label>
                <textarea class="form-control" id="description" name="description" rows="3"
                  placeholder="Provide a short description of the offer (optional)"></textarea>
              </div>
            </div>

            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="submit" class="btn btn-primary">Add Offer</button>
            </div>
          </form>
        </div>
      </div>
    </div>


    <!-- Edit Offer Modal -->
    <div class="modal fade" id="editOfferModal" tabindex="-1" aria-labelledby="editOfferModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg">
        <div class="modal-content" style="background-color: #222736;">
          <form id="editOfferForm" action="/offers/edit" method="POST">
            <div class="modal-header">
              <h5 class="modal-title" id="editOfferModalLabel">Edit Offer</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <div class="mb-3">
                <label for="editOfferName" class="form-label">Offer Name</label>
                <input type="text" class="form-control" id="editOfferName" name="name" required />
              </div>
              <div class="mb-3">
                <label for="editOfferType" class="form-label">Offer Type</label>
                <select class="form-select" id="editOfferType" name="type" required>
                  <option value="Category">Category</option>
                  <option value="Product">Product</option>
                </select>
              </div>
              <div class="mb-3">
                <label for="editCategoryOrProduct" class="form-label">Category or Product</label>
                <input type="text" class="form-control" id="editCategoryOrProduct" name="categoryOrProduct" required />
              </div>
              <div class="mb-3">
                <label for="editDiscountType" class="form-label">Discount Type</label>
                <select class="form-select" id="editDiscountType" name="discountType" required>
                  <option value="Percentage">Percentage</option>
                  <option value="Fixed Amount">Fixed Amount</option>
                </select>
              </div>
              <div class="mb-3">
                <label for="editDiscountValue" class="form-label">Discount Value</label>
                <input type="number" class="form-control" id="editDiscountValue" name="discountValue" required />
              </div>
              <div class="mb-3">
                <label for="editStartDate" class="form-label">Start Date</label>
                <input type="date" class="form-control" id="editStartDate" name="startDate" required />
              </div>
              <div class="mb-3">
                <label for="editEndDate" class="form-label">End Date</label>
                <input type="date" class="form-control" id="editEndDate" name="endDate" required />
              </div>
              <div class="mb-3">
                <label for="editStatus" class="form-label">Status</label>
                <select class="form-select" id="editStatus" name="status" required>
                  <option value="Active">Active</option>
                  <option value="Inactive">Inactive</option>
                  <option value="Scheduled">Scheduled</option>
                </select>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="submit" class="btn btn-primary">Save Changes</button>
            </div>
          </form>
        </div>
      </div>
    </div>

    <input type="hidden" id="offersData" value='<%- JSON.stringify(offers) %>' />


    <footer class="main-footer font-xs">
      <div class="row pb-30 pt-15">
        <div class="col-sm-6">
          <script>document.write(new Date().getFullYear());</script> © Scentmagic - Perfume Ecommerce Template.
        </div>
        <div class="col-sm-6">
          <div class="text-sm-end">All rights reserved</div>
        </div>
      </div>
    </footer>
  </main>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


  <script>
    function deleteOffer(offerId) {
      Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to revert this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, delete it!",
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/offers/delete/${offerId}`, {
            method: "DELETE",
            headers: {
              "Content-Type": "application/json",
            },
          })
            .then((response) => {
              if (response.ok) {
                Swal.fire("Deleted!", "Offer deleted successfully.", "success").then(
                  () => {
                    location.reload();
                  }
                );
              } else {
                return response.json().then((data) => {
                  throw new Error(data.message || "Error deleting offer.");
                });
              }
            })
            .catch((error) => {
              console.error("Error deleting offer:", error);
              Swal.fire("Error!", error.message, "error");
            });
        }
      });
    }
  </script>

  <script>
    async function loadOptions() {
      const offerType = document.getElementById("offerType").value;
      const categoryOrProduct = document.getElementById("categoryOrProduct");

      categoryOrProduct.innerHTML = '<option value="">Select a value</option>';

      if (!offerType) return;

      try {

        const endpoint = `/admin/offers/${offerType.toLowerCase()}`;
        const response = await fetch(endpoint, {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        });

        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);

        const data = await response.json();

        data.forEach((item) => {
          const option = document.createElement("option");
          option.value = item._id;
          option.textContent = item.product_name || item.name;
          categoryOrProduct.appendChild(option);
        });
      } catch (error) {
        console.error("Error fetching data:", error);

        Swal.fire({
          title: "Error!",
          text: "Failed to load options. Please try again.",
          icon: "error",
          confirmButtonText: "OK",
        });
      }
    }

    async function addOffer(event) {
      event.preventDefault();
      const formData = new FormData(document.getElementById("offerForm"));

      const offerData = Object.fromEntries(formData.entries());

      try {
        const response = await fetch("/admin/offers/add", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(offerData),
        });

        const data = await response.json();

        if (data.success) {

          Swal.fire({
            title: "Success!",
            text: data.message,
            icon: "success",
            confirmButtonText: "OK",
          }).then(() => {

            document.getElementById("offerForm").reset();
            window.location.href = '/admin/offers'
          });
        } else {

          Swal.fire({
            title: "Error!",
            text: data.message,
            icon: "error",
            confirmButtonText: "OK",
          });
        }
      } catch (error) {
        console.error("Error adding offer:", error);

        Swal.fire({
          title: "Error!",
          text: "Failed to add offer. Please try again.",
          icon: "error",
          confirmButtonText: "OK",
        });
      }
    }

    document.getElementById("offerForm").addEventListener("submit", addOffer);
  </script>

  <script>

    function validateForm() {

      document.querySelectorAll(".text-danger").forEach(span => span.textContent = "");

      const offerName = document.getElementById("offerName").value.trim();
      if (!offerName) {
        document.getElementById("offerNameError").textContent = "Offer Name is required.";
        return false;
      }

      const offerType = document.getElementById("offerType").value;
      if (!offerType) {
        document.getElementById("offerTypeError").textContent = "Offer Type is required.";
        return false;
      }

      const categoryOrProduct = document.getElementById("categoryOrProduct").value;
      if (!categoryOrProduct) {
        document.getElementById("categoryOrProductError").textContent = "Please select a category or product.";
        return false;
      }

      const discountType = document.getElementById("discountType").value;
      if (!discountType) {
        document.getElementById("discountTypeError").textContent = "Discount Type is required.";
        return false;
      }

      const discountValue = document.getElementById("discountValue").value;
      if (!discountValue || discountValue <= 0) {
        document.getElementById("discountValueError").textContent = "Enter a valid discount value.";
        return false;
      }

      const startDate = document.getElementById("startDate").value;
      if (!startDate) {
        document.getElementById("startDateError").textContent = "Start Date is required.";
        return false;
      }

      const endDate = document.getElementById("endDate").value;
      if (!endDate) {
        document.getElementById("endDateError").textContent = "End Date is required.";
        return false;
      } else {

        const parsedStartDate = new Date(startDate);
        const parsedEndDate = new Date(endDate);

        if (parsedEndDate <= parsedStartDate) {
          document.getElementById("endDateError").textContent = "End Date must be after Start Date.";
          return false;
        }
      }

      const status = document.getElementById("status").value;
      if (!status) {
        document.getElementById("statusError").textContent = "Status is required.";
        return false;
      }

      return true;
    }

    document.getElementById("offerForm").addEventListener("submit", function (event) {
      if (!validateForm()) {
        event.preventDefault();
      } else {
        addOffer(event);
      }
    });
  </script>




  <!-- <script>
    document.getElementById('offerType').addEventListener('change', async function () {
        const offerType = this.value;
        const categoryOrProductSelect = document.getElementById('categoryOrProduct');
        categoryOrProductSelect.innerHTML = '<option value="">Loading...</option>'; // Loading placeholder

        try {
            // Fetch categories or products based on the offer type
            const response = await fetch(`/offers/${offerType.toLowerCase()}`);
            const data = await response.json();

            if (response.ok) {
                // Clear and populate the select options
                categoryOrProductSelect.innerHTML = '<option value="">Select</option>';
                data.forEach(item => {
                    categoryOrProductSelect.innerHTML += `<option value="${item._id}">${item.name || item.product_name}</option>`;
                });
            } else {
                categoryOrProductSelect.innerHTML = '<option value="">Error loading data</option>';
                console.error('Error fetching data:', data.message);
            }
        } catch (err) {
            categoryOrProductSelect.innerHTML = '<option value="">Error loading data</option>';
            console.error('Fetch error:', err);
        }
    });
</script> -->


  <script>

    function populateEditForm(id) {

      const offersData = JSON.parse(document.getElementById('offersData').value);

      const offer = offersData.find(o => o._id === id);
      if (offer) {
        document.getElementById('editOfferId').value = offer._id;
        document.getElementById('offerName').value = offer.name;
        document.getElementById('offerType').value = offer.type;
        document.getElementById('categoryOrProduct').value = offer.categoryOrProduct;
        document.getElementById('discountType').value = offer.discountType;
        document.getElementById('discountValue').value = offer.discountValue;
        document.getElementById('startDate').value = offer.startDate.split('T')[0];
        document.getElementById('endDate').value = offer.endDate.split('T')[0];
        document.getElementById('status').value = offer.status;
      }
    }


    // Example for triggering the modal and pre-filling the form
    // function openEditOfferModal(offer) {
    //     // Pre-fill the form fields with offer data
    //     document.getElementById('editOfferId').value = offer.id;
    //     document.getElementById('editOfferName').value = offer.name;
    //     document.getElementById('editOfferType').value = offer.type;
    //     document.getElementById('editCategoryOrProduct').value = offer.categoryOrProduct;
    //     document.getElementById('editDiscountType').value = offer.discountType;
    //     document.getElementById('editDiscountValue').value = offer.discountValue;
    //     document.getElementById('editStartDate').value = offer.startDate;
    //     document.getElementById('editEndDate').value = offer.endDate;
    //     document.getElementById('editStatus').value = offer.status;

    //     // Open the modal
    //     new bootstrap.Modal(document.getElementById('editOfferModal')).show();
    // }

  </script>

  <% if (message) { %>
    <script>
      Swal.fire({
        icon: '<%= status === "success" ? "success" : "error" %>',
        title: '<%= message %>',
        showConfirmButton: true,
        timer: 3000
      }).then(() => {
        window.location.href = "/admin/categories";
      });
    </script>
    <% } %>

      <script src="/js/admin/jquery-3.6.0.min.js"></script>
      <script src="/js/admin/bootstrap.bundle.min.js"></script>
      <script src="/js/admin/select2.min.js"></script>
      <script src="/js/admin/perfect-scrollbar.js"></script>
      <script src="/js/admin/jquery.fullscreen.min.js"></script>
      <script src="/js/admin/main.js" type="text/javascript"></script>
</body>

</html>